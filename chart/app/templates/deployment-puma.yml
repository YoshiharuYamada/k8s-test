apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-deployment-puma
  labels:
    app.kubernetes.io/name:       {{ .Chart.Name }}
    app.kubernetes.io/instance:   {{ .Release.Name }}
    app.kubernetes.io/component:  puma
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart:                {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.deployment.puma.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name:      {{ .Chart.Name }}
      app.kubernetes.io/instance:  {{ .Release.Name }}
      app.kubernetes.io/component: puma
  template:
    metadata:
      labels:
        app.kubernetes.io/name:      {{ .Chart.Name }}
        app.kubernetes.io/instance:  {{ .Release.Name }}
        app.kubernetes.io/component: puma
    spec:
      containers:
        - name: nginx
          image: {{ .Values.pod.nginx.image }}
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                  - nginx
                  - -s
                  - quit
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            tcpSocket:
              port: {{ .Values.pod.nginx.port }}
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            httpGet:
              path: /_status
              port: {{ .Values.pod.nginx.port }}
          resources:
            requests:
              memory: {{ .Values.pod.nginx.resources.memory }}
            limits:
              memory: {{ .Values.pod.nginx.resources.memory }}
          ports:
            - containerPort: {{ .Values.pod.nginx.port }}
              protocol:      TCP
              name:          nginx
          volumeMounts:
            - mountPath: /nginx/root
              name:      app-public
              readOnly:  true
            - mountPath: /nginx/sockets
              name:      app-sockets
              readOnly:  true
            - mountPath: /etc/nginx/conf.d
              name:      nginx-conf
        - name: puma
          image: {{ .Values.pod.puma.image }}
          imagePullPolicy: Always
          command:
            - bundle
            - exec
            - puma
            - -C
            - config/puma/puma.rb
          lifecycle:
            postStart:
              exec:
                command:
                  - cp
                  - -r
                  - public/.
                  - /nginx/root
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 5
            tcpSocket:
              port: {{ .Values.pod.puma.port }}
          readinessProbe:
            initialDelaySeconds: 15
            periodSeconds: 5
            httpGet:
              path: /health_checks
              port: {{ .Values.pod.puma.port }}
          resources:
            requests:
              memory: {{ .Values.pod.puma.resources.memory }}
            limits:
              memory: {{ .Values.pod.puma.resources.memory }}
          ports:
            - containerPort: {{ .Values.pod.puma.port }}
              protocol:      TCP
              name:          puma
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-configmap-env
            - secretRef:
                name: {{ .Chart.Name }}-secret-env
          volumeMounts:
            - mountPath: /app/config/puma
              name:      app-puma
            - mountPath: /nginx/root
              name:      app-public
            - mountPath: /app/tmp/sockets
              name:      app-sockets
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ .Chart.Name }}-configmap-nginx
        - name: app-puma
          configMap:
            name: {{ .Chart.Name }}-configmap-puma
        - name: app-public
          emptyDir: {}
        - name: app-sockets
          emptyDir: {}
